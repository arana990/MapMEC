# Este arquivo √© parte do programa Map&MEC
# Map&MEC √© um software livre; voc√™ pode redistribu√≠-lo e/ou
# modific√°-lo sob os termos da Licen√ßa P√∫blica Geral GNU como publicada
# pela Free Software Foundation; na vers√£o 3 da Licen√ßa, ou
# (a seu crit√©rio) qualquer vers√£o posterior.
#
# Este programa √© distribu√≠do na esperan√ßa de que possa ser √∫til,
# mas SEM NENHUMA GARANTIA; sem uma garantia impl√≠cita de ADEQUA√á√ÉO
# a qualquer MERCADO ou APLICA√á√ÉO EM PARTICULAR. Veja a
# Licen√ßa P√∫blica Geral GNU para mais detalhes.
#
# Voc√™ deve ter recebido uma c√≥pia da Licen√ßa P√∫blica Geral GNU junto
# com este programa. Se n√£o, veja <http://www.gnu.org/licenses/>.


import base64
import streamlit as st
import pandas as pd
from funcoes import *  # Garantir que funcoes.py esteja no mesmo diret√≥rio ou no PYTHONPATH

# Layout principal do aplicativo
st.sidebar.title("Menu")
selected_option = st.sidebar.radio("Selecione uma op√ß√£o:", ["Processador de Dados", "Tutorial download SIGA"])

st.sidebar.markdown("###### Aten√ß√£o, ap√≥s baixar o arquivo observe que nem todas as informa√ß√£o est√£o completas.")
st.sidebar.markdown("###### Esta aplica√ß√£o ainda esta em desenvolvimento e pode ser melhorada. Se voc√™ puder contrubuir, entre em contato: arana@ufpr.br")
if selected_option == "Processador de Dados":
    # T√≠tulo da p√°gina
    st.title("üåê Map&MEC üìà")
    st.subheader("Processador de Dados dos Docentes para planilha do MEC")
    # Texto explicativo
    st.write("Bem-vindo(a) √† aplica√ß√£o de processamento de dados dos docentes!")
    st.write("Esta ferramenta foi projetada para facilitar a organiza√ß√£o e consolida√ß√£o dos dados dos docentes da UFPR, extra√≠dos do SIGA e da PROGEPE.")
    # Introdu√ß√£o
    st.subheader("Siga as instru√ß√µes para utilizar a aplica√ß√£o")
    st.write("1Ô∏è‚É£ Fa√ßa o download dos dados do SIGA: Os usu√°rios devem fazer upload de um arquivo CSV com dados dos docentes extra√≠dos diretamente do SIGA. Veja o tutorial no Menu \"Tutorial download SIGA\"")
    st.write("2Ô∏è‚É£ Fa√ßa o upload dos dados do SIGA em \"Processador de Dados\": A aplica√ß√£o processar√° automaticamente os dados, fazendo compara√ß√µes, removendo duplicatas e estruturando-os conforme os padr√µes da planilha do INEP.")
    st.write("3Ô∏è‚É£ Fa√ßa o download dos Dados Processados: Ap√≥s o processamento, o usu√°rio poder√° baixar o arquivo em formato Excel, que estar√° pronto para ser utilizado em outros sistemas ou para an√°lise.")

    uploaded_file = st.file_uploader("üëâCarregue o arquivo CSV com os dados dos docentes extra√≠dos do SIGA.", type="csv")
    st.write("üö®Lembre-se de adicionar todas as colunas.")
    if uploaded_file is not None:
        output = process_file(uploaded_file)
        if output:
            b64 = base64.b64encode(output.getvalue()).decode()
        href = f'<a href="data:application/octet-stream;base64,{b64}" download="Dados_docentes_MEC-ok.xlsx">Baixar arquivo Excel</a>'
        st.markdown(href, unsafe_allow_html=True)

        #st.markdown(get_download_link("DADOS_MEC/Dados_docentes_MEC-ok.xlsx", "Dados_docentes_MEC-ok.xlsx"), unsafe_allow_html=True)

    st.write("‚ö†Ô∏èEsta aplica√ß√£o n√£o armazena nenhum dos dados carregados ap√≥s a sess√£o terminar.")
    st.write("üëçA privacidade e a integridade dos seus dados s√£o nossa prioridade.")


else:  # selected_option == "Tutorial"
    show_tutorial()

# Logo do curso
logo_curso_path = "IMAGEM/LOGO_CARTO.png"
# Logo do UFPR
logo_ufpr_path = "IMAGEM/LOGO_UFPR.png"

# Colocar as duas imagens lado a lado
col1, col2 = st.sidebar.columns(2)

# Inserir a primeira imagem na primeira coluna
col1.image(logo_curso_path, use_column_width=True)

# Inserir a segunda imagem na segunda coluna
col2.image(logo_ufpr_path, use_column_width=True)

st.sidebar.markdown("###### üë®‚Äçüíª Developed by: Prof. Dr. Daniel Arana, Map&A√ß√£o")
st.sidebar.markdown("###### GNU GENERAL PUBLIC LICENSE - V3")